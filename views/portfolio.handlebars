<!--Navbar-->
{{> portfolio/navbar-block }}

<div class="container page-wrap main-content-section mt-4">
    <!--Portfolio pieces-->
    <div class="row">
      <div class="col s12 mt-3 text-center" id="projects">
        <h1>Web development portfolio</h1>
      </div>
    </div>

    <!--Portfolio pieces-->
    <div class="row mb-4">
      <div class="col-xs-12">
        <div class="card project-card">
          <div class="card-header bg-primary text-white">
            <h5>BasketballScraper</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/scraper.png" alt="basketball game">
                <a href="https://hoops-scraper.herokuapp.com/" class="mb-3 mt-3 mr-2 btn live-btn text-white btn-primary" target="_blank">Live</a>
                <a href="https://github.com/philipstubbs13/NewsScrape" class="mb-3 mt-3 btn github-btn text-white btn-dark" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>I finished this project about the same time that the 2017-2018 NCAA Men's Basketball season came to end. Looking back at that season in particular, a lot did happen that year. I would have to say that year was one of the more exciting, interesting seasons that I can remember. I mean who can forget when Alabama nearly came back from an 11-point deficit with just over 10 minutes left while playing only three players against #14 Minnesota.</p>

                <p>As a result of all that happened in the news, I decided to create an app that would scrape news articles related to college basketball so that I (and other college basketball fans) could stay connected to the madness year round. More specifically, I used cheerio, MongoDB, Node.js, and various other technologies to scrape sports articles from <a href="http://www.espn.com/mens-college-basketball/" target="_blank">http://www.espn.com/mens-college-basketball/</a>, store the articles in a MongoDB database, and then display them in the app where fans can view them and leave comments.</p>
              </div>
            </div>
          </div>
        </div>

        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>HealthTracker</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/healthtracker2.png" alt="laptop">
                <a href="https://myhealthtracker.herokuapp.com/" class="mb-3 mt-3 mr-2 btn text-white btn-primary" target="_blank">Live</a>
                <a href="https://github.com/philipstubbs13/MedLog" class="mb-3 mt-3 btn text-white btn-dark" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>Many people visit the doctor’s office on a regular basis and have no way of accurately keeping track of their health information, such as upcoming appointments, prescriptions, symptoms they experience away from the doctor’s office, and notes from their doctors.</p>

                <p>Managing that information can be quite the challenge because it’s often written on paper and scattered across multiple documents and files. Also, information often comes from multiple doctors, and there’s no one, central location to store it all. For example, appointments might be scheduled on a paper calendar, but the notes from that appointment are located in a separate notebook. You might experience a symptom away from the doctor’s office, but you don't write it down and forget to tell your doctor at your next visit. As you can see, there are many problems with the current methods for managing one's health. Keeping track of this information is a time-consuming, manual process. As a result, this information can easily be lost, misplaced, or forgotten over time.</p>

                <p>This is where HealthTracker comes in. HealthTracker is a personal health journal app that allows you to log and keep track of health information so that you can easily share and discuss that information with your doctor during your next visit. The app is designed so that you can use it to create and maintain a health journal for yourself or for another person you care for. No more having to carry around bulky notebooks or losing important files. With this app, all of your health information is available in one location on one device.</p>
              </div>
            </div>
          </div>
        </div>

        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>ClickMe</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/clickme2.png" alt="two computer screens">
                <a href="https://clickme-game.herokuapp.com/" class="mb-3 mt-3 mr-2 btn btn-primary text-white" target="_blank">Live</a>
                <a href="https://github.com/philipstubbs13/ClickMe" class="mb-3 mt-3 btn btn-dark text-white" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>Test your memory of current NBA players with the ClickMe game. ClickMe is a memory skill app. The objective of the game is to be able to go through and click each player's image once. Each time you click a player's image, your score goes up by one. If you click a player's image twice, you lose and the game resets (score goes back to 0).</p>
                <p>This project was built using React, which is an open-source Javascript library developed at Facebook specifically for the task of developing user interfaces. React relies on a component-based architecture where elements of the user interface are broken into self-contained components.</p>
              </div>
            </div>
          </div>
        </div>

        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>New York Times React Search</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/news2.png" alt="New York Times React Search App">
                <a href="https://react-nytimes-search.herokuapp.com/" class="mb-3 mt-3 mr-2 btn btn-primary text-white" target="_blank">Live</a>
                <a href="https://github.com/philipstubbs13/NYT-React-Search" class="mb-3 mt-3 btn btn-dark text-white" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>A React application that uses the New York Times Article Search API to retrieve news articles by topic and year.</p>
                <p>When you navigate to the app home page, you will see an article search form with three input fields. Enter the topic you
                want to search for in the <b>Topic</b> field (for example, Grayson Allen), a start year (for example, 2017) in the <b>Start year</b> field, and an end year (for example, 2018) in the <b>End year</b> field. After you provide that information, click <b>Search</b>. When you click <b>Search</b>, a list of articles about your topic from the years specified will be retrieved using the New York Times Article Search API. If you want to read the entire article, click <b>Continue reading</b>, which is an external link that takes you to the full length article on the New York Times website.</p>
                <p>In a future version of the app, you will be able to save articles that you like, leave comments on saved articles, and delete articles. Stay tuned...</p>
              </div>
            </div>
          </div>
        </div>

        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>AdoptMeNow</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/adoptme.png" alt="Cat">
                <a href="https://pet-match-app.herokuapp.com/" class="mb-3 mt-3 mr-2 btn btn-primary text-white" target="_blank">Live</a>
                <a href="https://github.com/philipstubbs13/PetMatch" class="mb-3 mt-3 btn btn-dark text-white" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>AdoptMeNow is a full stack, MVC (Model-View-Controller) app that connects people with animal welfare organizations (AWO) in their area and helps streamline and simplify the pet adoption process. With this app, you can do the following:</p>
                <ul>
                  <li>Take a compatibility assessment and receive suggested pets that reflect your personality, preferences, and interests.</li>
                  <li>Save your assessment results.</li>
                  <li>Search for adoptable pets at animal shelters in your area based on your assessment results. You can search by breed, type, gender, and age.</li>
                  <li>Add the pets that you might consider adopting to a favorites list, which allows you to quickly look up those pets and their contact information later.</li>
                </ul>
              </div>
            </div>
          </div>
        </div>

        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>MyCookingAssistant</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/pizza2.png" alt="MyCookingAssistant app">
                <a href="https://longshotauth.firebaseapp.com/" class="mb-3 mt-3 mr-2 btn btn-primary text-white" target="_blank">Live</a>
                <a href="https://github.com/philipstubbs13/Project-Longshot" class="mb-3 mt-3 btn btn-dark github-btn text-white" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>Are you having guests over for dinner tonight and don't know what to make? Do you have ingredients in your fridge and don't know what to do with them?</p>

                <p>The MyCookingAssistant app is a search engine that returns the most relevant recipes from the most popular sites on the web.</p>

                <p>With this app, you can:</p>

                <ul>
                  <li>Search for a variety of recipes from many sources.</li>
                  <li>Find out what ingredients you need to make a recipe.</li>
                  <li>Favorite a recipe so that you can view it later.</li>
                  <li>Unfavorite a recipe.</li>
                  <li>Add your own personal notes to a recipe.</li>
                </ul>
              </div>
            </div>
          </div>
        </div>

        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>myTrainBuilder</h5>
          </div>
          <div class="card-body">
              <div class="row">
                <div class="col-lg-6 col-md-12">
                  <img class="card-img-top" src="assets/images/train3.png" alt="myTrainBuilder">
                  <a href="https://fir-train-scheduler-7f4a9.firebaseapp.com/" class="mb-3 mt-3 mr-2 btn btn-primary text-white" target="_blank">Live</a>
                  <a href="https://github.com/philipstubbs13/Firebase-Train-Scheduler" class="mb-3 mt-3 btn btn-dark text-white" target="_blank">GitHub Repo</a>
                </div>
                <div class="col-lg-6 col-md-12">
                  <p>This project is a train schedule app that incorporates Firebase to host arrival and departure data. The app includes a form where users can enter information about a train, such as name, destination, first train time, and frequency. After a user submits the form, the app retrieves and manipulates this information with Moment.js to calculate the estimated next train time and number of minutes away. Moment.js is also used to display the times in a user friendly format (that is, hh:mm).</p>
                  <p>When a user submits the information for a train, the train informaton is added to the Current schedule table to provide up-to-date information about various trains, such as their arrival times and how many minutes remain until they arrive at their stations. Not only is the train information added to the table, but the data is also pushed to a database that is hosted on Firebase.</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>Carpool Buddy</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/carpool.png" alt="Card image cap">
                <a href="https://blooming-lowlands-71441.herokuapp.com/" class="mb-3 mt-3 mr-2 btn btn-primary text-white" target="_blank">Live</a>
                <a href="https://github.com/philipstubbs13/FriendFinder" class="mb-3 mt-3 btn btn-dark text-white" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>Carpool Buddy is a full stack app that matches you up with another user so that you can take advantage of the carpool lane and have someone to ride with to and from work. It includes a survey of 10 questions that help determine your compatibility with other users of the app. When you submit the survey, the app takes in your survey results and then compares your answers, question by question, with the answers from other users. The app does this by taking the difference between your answer and another user's answer for each question. Then, the app adds up the differences to calculate the total difference, which is the buddy compatibility score. The closest match is the user with the smallest difference. The app displays the name and photo of the user with the best overall match (this person is your carpool buddy).</p>
              </div>
            </div>
          </div>
        </div>
        
        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>Sequelized Burger</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/sequelburger2.png" alt="Card image cap">
                <a href="https://hidden-shelf-25357.herokuapp.com/" class="mb-3 mt-3 mr-2 btn btn-primary text-white" target="_blank">Live</a>
                <a href="https://github.com/philipstubbs13/sequelizedBurger" class="mb-3 mt-3 btn btn-dark text-white" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>This project is a full stack app that allows you to place an order for a burger. When you place an order, the burger you enter in the form field is added to the list of burgers on the left side of the screen. Each burger in the list has a <b>Devour me</b> button. Clicking this button moves the burger from the list on the left side of the screen to the list on the right. The list on the right is a list of burgers that have already been devoured. Each burger in this list has a <b>Throw away</b> button that allows you to remove the burger, which deletes the burger from the user interface as well as from the MySQL database.</p>
                <p>This project uses MySQL, Node, Express, Handlebars, and an ORM (Object Relational Mapper). Node and MySQL are used to query and route data in the app. Express is the backend web framework used for this app, and Handlebars is a templating language that is used to generate the HTML.</p>
              </div>
            </div>
          </div>
        </div>

        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>Awesome Burger</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/burger2.png" alt="Card image cap">
                <a href="https://gentle-caverns-56054.herokuapp.com/" class="mb-3 mt-3 mr-2 btn btn-primary text-white" target="_blank">Live</a>
                <a href="https://github.com/philipstubbs13/burger" class="mb-3 mt-3 btn btn-dark text-white" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>This project is a full stack app that allows you to place an order for a burger. When you place an order, the burger you enter in the form field is added to the list of burgers on the left side of the screen. Each burger in the list has a <b>Devour me</b> button. Clicking this button moves the burger from the list on the left side of the screen to the list on the right. The list on the right is a list of burgers that have already been devoured. Each burger in this list has a <b>Throw away</b> button that allows you to remove the burger, which deletes the burger from the user interface as well as from the MySQL database.</p>
                <p>This project uses MySQL, Node, Express, Handlebars, and an ORM (Object Relational Mapper). Node and MySQL are used to query and route data in the app. Express is the backend web framework used for this app, and Handlebars is a templating language that is used to generate the HTML.</p>
              </div>
            </div>
          </div>
        </div>

        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>Bamazon</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/bamazon3.jpg" alt="Card image cap">
                <a href="https://github.com/philipstubbs13/Bamazon" class="mb-3 mt-3 btn btn-dark text-white" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>This project is a command line app built using Node.js, Javascript, the inquirer npm package, and a MySQL database. It is an Amazon-like storefront that takes in customer orders on various sporting goods and outdoor items through the Bamazon Customer Portal. When a customer order is taken in the Customer Portal, the stock quantity for the product that is being purchased decreases by how much of that product the customer decides to buy.</p>

                <p>Managers can also use this app through the Bamazon Manager Portal. In the Bamazon Manager Portal, managers can see all the products that are currently being sold in the store, see all products that are low in inventory (that is, stock quantity is less than 5), add inventory to an existing product, and add a new product to the store.</p>

                <p>Finally, the Bamazon Supervisor Portal allows store supervisors to track product sales across departments as well as see a summary of the highest-grossing departments in the store. From this portal, supervisors are also able to create a new department if desired.</p>
              </div>
            </div>
          </div>
        </div>

        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>LIRI</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/twitter.jpg" alt="Liri command line app">
                <a href="https://github.com/philipstubbs13/liri-node-app" class="mb-3 mt-3 btn btn-dark text-white" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>A command line app that allows you to retrieve your latest tweets from Twitter, song information
                from Spotify, and movie information from OMDB.</p>

                <p>LIRI is like iPhone's SIRI. However, while SIRI is a Speech Interpretation and Recognition Interface, LIRI is a Language Interpretation and Recognition Interface. LIRI is a command line node app that takes in parameters and gives you back tweets, songs, and movies.</p>
              </div>
            </div>
          </div>
        </div>

        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>Hangman</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/hangman3.png" alt="Hangman">
                <a href="https://philipstubbs13.github.io/Hangman-Game/index.html" class="mb-3 mt-3 mr-2 btn btn-primary text-white" target="_blank">Live</a>
                <a href="https://github.com/philipstubbs13/Hangman-Game" class="mb-3 mt-3 btn btn-dark text-white" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>Hangman game built using HTML, CSS, JavaScript, jQuery, and Bootstrap.</p>
                <p>This app runs in the browser and features dynamically updated HTML powered by JavaScript.</p>
              </div>
            </div>
          </div>
        </div>

        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>Star Wars Game</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/starwars2.png" alt="Star wars role playing game">
                <a href="https://philipstubbs13.github.io/Star-Wars-RPG-Game/index.html" class="mb-3 mt-3 mr-2 btn btn-primary text-white" target="_blank">Live</a>
                <a href="https://github.com/philipstubbs13/Star-Wars-RPG-Game" class="mb-3 mt-3 btn btn-dark text-white" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>A fun and interactive Star Wars Role playing game for web browsers using the jQuery library to dynamically update the HTML.</p>
                <p>To play the game, you choose a player. That will be your player for the rest of the game. The object of the game is to defeat the rest of the players (your enemies) before your health points score reaches 0.</p>
              </div>
            </div>
          </div>
        </div>

        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>Trivia Game</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/stadium.jpg" alt="Trivia Game">
                <a  href="https://philipstubbs13.github.io/TriviaGame/index.html" class="mb-3 mt-3 mr-2 btn btn-primary text-white" target="_blank">Live</a>
                <a href="https://github.com/philipstubbs13/TriviaGame" class="mb-3 mt-3 btn btn-dark text-white" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>This app is a trivia game that was created using JavaScript for the logic and jQuery to manipulate the HTML. Specifically, the trivia questions, possible answers/choices, correct answers, and images are stored in an array. A count variable was created to keep track of the index of the currently displayed trivia question. When the game starts, the count variable starts at 0. The game will display a question and the list of choices for that question based on the value of the count variable. For each question answered (or not answered), the count goes up by 1.</p>
                <p>The app also uses a timer. Specifically, it uses the setInterval method to decrement the timer every 1 second and the clearInterval method to stop the timer when it reaches 0. When the timer reaches 0, the current question and choices are hidden from the HTML, and the next question will appear after a few seconds of delay.</p>
                <p>As you go through the questions in the game, the app keeps track of the number of correct answers with the correctAnswersTally variable and the number of incorrect answers with the incorrectAnswersTally variable. If the incorrect answer is chosen, it was decided to not show the correct answer during the game. When the game is over (no more questions are left), the app displays the value of the correctAnswersTally variable to the user. A "Try again?" button is appended to the page so that the user can play again to improve upon his/her score. The app also uses Bootstrap for styling and layout.</p>
              </div>
            </div>
          </div>
        </div>

        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>Constructor Hangman</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/skyline.jpg" alt="Minneapolis skyline">
                <a href="https://github.com/philipstubbs13/constructor-hangman" class="mb-3 mt-3 btn btn-dark text-white" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>This project is a command line version of the classic Hangman game. This game uses similar logic to the browser-based Hangman game I created, but with this game, I created a command line version using Javascript constructor functions to create letter and word objects, the inquirer npm package to prompt users to guess a letter, and Node.js to run the Javascript code from the command line.</p>
              </div>
            </div>
          </div>
        </div>

        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>Athlete hall of gifs</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/basketball2.jpg" alt="Athlete hall of gifs">
                <a href="https://philipstubbs13.github.io/Giphy-API-Project/index.html" class="mb-3 mt-3 mr-2 btn btn-primary text-white" target="_blank">Live</a>
                <a href="https://github.com/philipstubbs13/Giphy-API-Project" class="mb-3 mt-3 btn btn-dark text-white" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>This website uses the GIPHY API to populate the site with gifs of your favorite athletes. Specifically, it uses the jQuery AJAX method to perform AJAX GET requests to the query URL to get data from the GIPHY API. To perform an AJAX call, a query URL needs to be constructed. The query URL consists of the host, path, search term (the name of the athlete), the maximum number of gifs to return, and an API key. After the query URL is constructed, the URL is used to perform the request. When the request is complete, the site uses Javascript and jQuery to add static gif images to the HTML. You can select an athlete from a pre-defined list or add your own athlete to the list if the athlete you want to search for is not available. To play a gif, click it. Click it again to pause.</p>
              </div>
            </div>
          </div>
        </div>

        <div class="card project-card mt-5">
          <div class="card-header bg-primary text-white">
            <h5>Crystal Collectors</h5>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-lg-6 col-md-12">
                <img class="card-img-top" src="assets/images/crystal2.png" alt="Crystal Collectors">
                <a href="https://philipstubbs13.github.io/week-4-game/index.html" class="mb-3 mt-3 mr-2 btn btn-primary text-white" target="_blank">Live</a>
                <a href="https://github.com/philipstubbs13/week-4-game" class="mb-3 mt-3 btn btn-dark text-white" target="_blank">GitHub Repo</a>
              </div>
              <div class="col-lg-6 col-md-12">
                <p>A fun and interactive game for web browsers that uses the jQuery library to dynamically update the HTML.</p>
                <p>How to play</p>
                <ul>
                  <li>At the start of the game, you are given a random number. This number is the <b>Target number</b> that you need to reach to win.</li>
                  <li>To reach the <b>Target number</b>, click a crystal, which adds a specific number of points to <b>Your number</b>.</li>
                  <li>To win the game, <b>Your number</b> must match the <b>Target number</b>. If you go over the <b>Target number</b>, you lose.</li>
                  <li>The value of each crystal is hidden from you until you click it.</li>
                  <li>Each time you start a new game, the game will change the values of each crystal and the value of the <b>Target number</b>.</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>   
    </div>


<!--Footer-->
{{> portfolio/footer-block}}